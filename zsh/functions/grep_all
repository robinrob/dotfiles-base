local +r Usage='grep_all <grep-expression> <find-expression> -w <where> -d <depth> -e <excludes> -a <after> -b <before> -i (case-insensitive grep)'

( [[ -z $1 ]] || [[ -z $2 ]] ) && red $Usage && return 1


local +r GrepExpression=$1;
local +r FindExpression=$2; shift 2
local +r Where='.'
local +r MaxDepth
local +r Insensitive
local +r Excludes
local +r After=2
local +r Before=2

while getopts :w:d:e:a:b:i opt
do
	case $opt in
    w) Where="$OPTARG" ;;
    d) MaxDepth="-maxdepth $OPTARG" ;;
    i) Insensitive="--ignore-case" ;;
    e)
      local +r -a ExcludesList=(${=OPTARG})
			for exclude in $ExcludesList
			do
				Excludes="$Excludes ! -name $exclude"
      done
      ;;
    a) After=$OPTARG ;;
    b) Before=$OPTARG ;;
    *) red $Usage && return 1 ;;
	esac
done

if [ -n $After ]
then
    After="-A $After"
fi

if [ -n $Before ]
then
    Before="-B $Before"
fi

IFS="
"
for file in $(gfind -P $Where ${=MaxDepth} -follow ${=Excludes} -name "$FindExpression" -type f)
do
  local +r Result
  Result=$(ggrep -n $After $Before $Insensitive $GrepExpression $file)
  if [[ -n $Result ]]
  then
    yellow $file
    print $Result | ggrep $After $Before --color $Insensitive $GrepExpression
  fi
done
